syntax = "proto3";

// Allows trade between client peers
service Trade {
    // Starts a trade with another user
    rpc trade (TradeEvent) returns (TradeResponse) {}
    
    // Updates the wanted and offered lists in trade
    rpc update (TradeEvent) returns (TradeResponse) {}
    
    // Accepts a trade
    rpc accept (TradeEvent) returns (TradeResponse) {}
    
    // Rejects a trade
    rpc reject (TradeEvent) returns (TradeResponse) {}
    
    // Requests fusion during a trade
    rpc fuse (TradeEvent) returns (TradeResponse) {}
    
    // Sends gems after a trade is completed
    rpc gems (TradeGems) returns (TradeResponse) {}
}

message TradeEvent {
    string peerid = 1;
    string peername = 2;
    uint32 port = 3;
    repeated string wanted = 4;
    repeated string offered = 5;
}

message TradeGems {
    repeated bytes gems = 1;
}

message TradeResponse {
    bool ack = 1;
    string error = 2;
}